for(i in nrow(a)){
for(j in 1:6){
B[i,j]=j*a[i,1]
}
return(B)
}
}
MyFunction1()
B= matrix(nrow = 3, ncol = 6)
MyFunction1<-function(){
a=cbind(c(1,2,3))
for(i in nrow(a)){
for(j in 1:6){
B[i,j]=j*a[i,1]
}
return(B)
}
MyFunction1()
B= matrix(nrow = 3, ncol = 6)
MyFunction1<-function(){
a=cbind(c(1,2,3))
for(i in nrow(a)){
for(j in 1:6){
B[i,j]=j*a[i,1]
return(B)
}
}
MyFunction1()
B= matrix(nrow = 3, ncol = 6)
MyFunction1<-function(){
a=cbind(c(1,2,3))
for(i in nrow(a)){
for(j in 1:6){
B[i,j]=j*a[i,1]
return}
}
return (B)
}
MyFunction1()
B= matrix(nrow = 3, ncol = 6)
MyFunction1<-function(){
a=cbind(c(1,2,3))
for(i in nrow(a)){
for(j in 1:6){
B[i,j]=j*a[i,1]
}
}
return (B)
}
MyFunction1()
B<-matrix(nrow = 3, ncol=6);
MyFunction1 <-function()
{
a<-cbind(c(1,2,3))
for (i in 1:nrow(a))
{
for (j in 1:6)
{
B[i,j]= j*a[i,1];
}
}
return (B)
}
MyFunction1()
B= matrix(nrow = 3, ncol = 6)
MyFunction1<-function(){
a=cbind(c(1,2,3))
for(i in 1: nrow(a)){
for(j in 1:6){
B[i,j]=j*a[i,1]
}
}
return (B)
}
MyFunction1()
Myfunction2<-function(){
s=seq(-pi, pi, 0.1)
c=sin(s)
plot(c, col="blue")
}
Myfunction2<-function(){
s=seq(-pi, pi, 0.1)
c=sin(s)
plot(c, col="blue")
}
Myfunction2()
Myfunction2<-function(){
pdf("C:/Users/asus/Desktop/fayllar/data science/lab1/sin.pdf")
s=seq(-pi, pi, 0.1)
c=sin(s)
plot(c, col="blue",pch="+", main=" Sin graph", xlab="X value", ylab="Y value")
}
Myfunction2()
Myfunction2<-function(){
pdf("C:/Users/asus/Desktop/fayllar/data science/lab1/sin.pdf")
s=seq(-pi, pi, 0.1)
c=sin(s)
plot(c, col="blue",pch="+", main=" Sin graph", xlab="X value", ylab="Y value")
dev.off()
}
Myfunction2()
Myfunction2<-function(){
pdf("C:/Users/asus/Desktop/fayllar/data science/lab1/sin.pdf")
s=seq(-pi, pi, 0.1)
c=sin(s)
plot(c, col="blue",pch="+", main=" Sin graph", xlab="X value", ylab="Y value")
dev.off()
}
Myfunction2()
function(){
pdf("C:/Users/asus/Desktop/fayllar/data science/lab1/sin.pdf")
s=seq(-pi, pi, 0.1)
c=sin(s)
plot(c, col="blue",pch="+", main=" Sin graph", xlab="X value", ylab="Y value")
dev.off()
function(){
pdf("C:/Users/asus/Desktop/fayllar/data science/lab1/sin.pdf")
s=seq(-pi, pi, 0.1)
c=sin(s)
plot(c, col="blue",pch="+", main=" Sin graph", xlab="X value", ylab="Y value")
dev.off()
}
Myfunction2<-function(){
pdf("C:/Users/asus/Desktop/fayllar/data science/lab1/sin1.pdf")
s=seq(-pi, pi, 0.1)
c=sin(s)
plot(c, col="blue",pch="+", main=" Sin graph", xlab="X value", ylab="Y value")
dev.off()
}
Myfunction2()
Myfunction2<-function(){
pdf("C:/Users/asus/Desktop/fayllar/data science/lab1/sin1.pdf")
s=seq(-pi, pi, 0.1)
c=sin(s)
plot(c, col="blue",pch="+", main=" Sin graph", xlab="X value", ylab="Y value")
dev.off()
}
Myfunction2()
rm(list=ls())
Iris=read.table("C:/Users/asus/Desktop/fayllar/data science/lab2/iris.xlsx")
read.table("C:/Users/asus/Desktop/fayllar/data science/lab2/iris.xlsx", sep=":", header = TRUE)
Iris=read.table("C:/Users/asus/Desktop/fayllar/data science/lab2/iris.xlsx", sep=":", header = TRUE)
Iris=read.table("C:/Users/asus/Desktop/fayllar/data science/lab2/data.xlsx", sep=":", header = TRUE)
Iris=read.csv("C:/Users/asus/Desktop/fayllar/data science/lab2/data.csv", sep=":", header = TRUE)
Iris
View(Iris)
View(Iris)
Iris=read.csv("C:/Users/asus/Desktop/fayllar/data science/lab2/data.csv", sep=",", header = TRUE)
Iris
View(Iris)
Iris=read.csv("C:/Users/asus/Desktop/fayllar/data science/lab2/data.csv", sep=" ", header = TRUE)
Iris
View(Iris)
Ir=Iris
Ir
class(Ir)
View(Ir)
View(Ir)
names(Ir)=c("sepal.lenght", "sepal.width","petal.lenght","petal.width","class")
names(Ir)=c("sepal.lenght", "sepal.width","petal.lenght","petal.width","class")
c("sepal.lenght", "sepal.width","petal.lenght","petal.width","class")
names(Ir)=c("sepal.lenght", "sepal.width","petal.lenght","petal.width","class")
names(Ir)
names(Ir)
names(Ir)=c("sepal.lenght", "sepal.width","petal.lenght","petal.width","class")
names(Ir)=c("sepal.lenght", "sepal.width","petal.lenght","petal.width","Class")
names(Ir)
View(Ir)
names(Ir) = c("sepal.lenght", "sepal.width","petal.lenght","petal.width","class")
names(Ir)
Iris=read.csv("C:/Users/asus/Desktop/fayllar/data science/lab2/data.csv", sep=", ", header = TRUE)
Ir=Iris
Iris=read.csv("C:/Users/asus/Desktop/fayllar/data science/lab2/data.csv", sep=",", header = TRUE)
Ir=Iris
names(Ir) = c("sepal.lenght", "sepal.width","petal.lenght","petal.width","class")
names(Ir)
names(Ir) = c("sepal.lenght", "sepal.width","petal.lenght","petal.width","class")
Iris=read.csv("C:/Users/asus/Desktop/fayllar/data science/lab2/data.csv", sep=",", header = TRUE)
Iris=read.csv("C:/Users/asus/Desktop/fayllar/data science/lab2/data.csv", sep = "," , header = TRUE)
Ir=Iris
Iris=read.csv("C:/Users/asus/Desktop/fayllar/data science/lab2/data.csv", sep = "," , header = TRUE)
Ir=Iris
Ir=Iris
names(Ir) = c("sepal.lenght", "sepal.width","petal.lenght","petal.width","class")
names(Ir)
Iris=read.table("C:/Users/asus/Desktop/fayllar/data science/lab2/data.csv", sep = "," , header = TRUE)
Ir=Iris
Iris=read.table("C:/Users/asus/Desktop/fayllar/data science/lab2/data.csv", sep = "," , header = TRUE)
Ir=Iris
Iris=read.table("C:/Users/asus/Desktop/fayllar/data science/lab2/data.csv", header = TRUE)
Ir=Iris
table(Ir)
Iris=read.table("C:/Users/asus/Desktop/fayllar/data science/lab2/data.csv", sep=",", header = TRUE)
Ir=Iris
Iris=read.table("C:/Users/asus/Desktop/fayllar/data science/lab2/data.csv",  header = TRUE)
Ir=Iris
Ir
names (Ir)<-c("sepal.lenght","sepal.width", "petal.lenght","petal.width","class")
names(ir) = c("sepal.length", "sepal.width",
"petal.length", "petal.width", "class")
names(Ir) = c("sepal.length", "sepal.width",
"petal.length", "petal.width", "class")
Iris=read.table("C:/Users/asus/Desktop/fayllar/data science/lab2/data.csv",  header = TRUE)
ir=Iris
names(ir) = c("sepal.length", "sepal.width","petal.length", "petal.width", "class")
View(Ir)
View(ir)
names(ir) = c("sepal.length")
names(ir)
ir
Iris=read.csv("C:/Users/asus/Desktop/fayllar/data science/lab2/data.csv",  header = TRUE)
ir=Iris
iris=read.csv("C:/Users/asus/Desktop/fayllar/data science/lab2/data.csv",  header = TRUE)
ir=iris
iris=read.csv("C:/Users/asus/Desktop/fayllar/data science/lab2/data.csv",sep=" ",  header = TRUE)
ir=iris
ir
View(ir)
View(ir)
names(ir)<-c("sepal.lenght","sepal.width","petal.lenght","petal.width","class")
iris=read.csv("C:/Users/asus/Desktop/fayllar/data science/lab2/data.csv",sep=",",  header = TRUE)
ir=iris
iris=read.csv("C:/Users/asus/Desktop/fayllar/data science/lab2/data.csv",sep=" ",  header = TRUE)
ir=iris
names(ir)<-c("sepal.lenght","sepal.width","petal.lenght","petal.width","class")
ir=iris
ir[, 3:4]
names(ir) = c("sepal.length", "sepal.width","petal.length", "petal.width", "class")
install.packages("odbc")
install.packages("RODBC")
library("RODBC", lib.loc="~/R/win-library/3.4")
con<-odbcConnect("NORTHWND")
query<-sqlQuery(con,"select*from Products")
con<-odbcConnect("NORTHWND",uid= , pwd=)
query<-sqlQuery(con,"select*from Products")
con<-odbcConnect("NORTHWND",uid=" ", pwd="")
query<-sqlQuery(con,"select*from Products")
con<-odbcConnect("NORTHWND",uid=" ", pwd="")
dbhandle <- odbcDriverConnect('driver={SQL Server};server=mysqlhost;database=NORTHWND;trusted_connection=true')
dbhandle <- odbcDriverConnect('driver={SQL Server};server=mysqlhost;database=NORTHWND;trusted_connection=true')
query<-sqlQuery(dbhandle,"select*from Products")
query
dbhandle <- odbcDriverConnect('driver={SQL Server};server=mysqlhost;database=NORTHWND;trusted_connection=true')
dbhandle <- odbcConnect('driver={SQL Server};server=.;database=NORTHWND;trusted_connection=true')
dbhandle <- odbcConnect(server=.,database="NORTHWND",trusted_connection=true)
library("odbc", lib.loc="~/R/win-library/3.4")
dbhandle <- odbcConnect(server=.,database="NORTHWND",trusted_connection=true)
dbhandle <- odbcConnect(server=.,database="NORTHWND",trusted_connection=true, dsn = '')
con<-odbcConnect('NORTHWND',uid=,pwd = )
con<-odbcConnect('NORTHWND',uid='',pwd ='' )
con<-odbcConnect('NORTHWND')
dbhandle <- odbcDriverConnect("Driver={SQL Server};Server=.;Database=NORTHWND;Trusted_Connection=Yes")
query<- sqlQuery(dbhandle,"select * from Products")
View(query)
dbhandle <- odbcDriverConnect("Driver={SQL Server};Server=.;Database=NORTHWND;Trusted_Connection=Yes")
query<- sqlQuery(dbhandle,"select * from Products")
View(query)
source('D:/Fennler/Second term/Data modelling/lablar/lab 2/plotPetalLength.R')
source('D:/Fennler/Second term/Data modelling/lablar/lab 2/plotPetalLength.R')
ir=iris
names(ir) = c("sepal.length", "sepal.width","petal.lenght", "petal.width", "class")
hist(ir$petal.lenght ,main="Petal Lenght" , breaks=29, xlab = "Frequency", ylab="Lenght of bars"
, col="blue")
abline(v=mean(ir$petal.lenght),col="red" ,lwd=2)
abline(v=median(ir$petal.lenght),col="yellow",lwd=2)
legend("topright",c("Median","Mean"),col = c("yellow" ,"red"),lwd=2)
View(query)
View(query)
iris=read.csv("C:/Users/asus/Desktop/fayllar/data science/lab2/A01_M02_20170109.csv",sep=" ",  header = TRUE)
str(iris)
View(iris)
View(iris)
iris=read.table("C:/Users/asus/Desktop/fayllar/data science/lab2/A01_M02_20170109.csv",sep=" ",  header = TRUE)
table(iris)
iris=read.table("C:/Users/asus/Desktop/fayllar/data science/lab2/A01_M02_20170109.csv",sep=" ",  header = TRUE)
table(iris)
mydata=read.table("C:/Users/asus/Desktop/fayllar/data science/lab2/A01_M02_20170109.csv",sep=" ",  header = TRUE)
table(mydata)
source('C:/Users/asus/Desktop/fayllar/data science/lab2/laboratory2.R')
mydata=read.csv("C:/Users/asus/Desktop/fayllar/data science/lab2/A01_M02_20170109.csv",sep=" ",  header = TRUE)
table(mydata
View(mydata)
View(mydata)
source('C:/Users/asus/Desktop/fayllar/data science/lab2/laboratory2.R')
mydata=read.csv("C:/Users/asus/Desktop/fayllar/data science/lab2/A01_M02_20170109.csv",sep=" ",  header = TRUE)
mydata
View(mydata)
source('C:/Users/asus/Desktop/fayllar/data science/lab2/laboratory2.R')
mydata=read.table("C:/Users/asus/Desktop/fayllar/data science/lab2/A01_M02_20170109.xlsx",sep=" ",  header = TRUE)
mydata
source('C:/Users/asus/Desktop/fayllar/data science/lab2/laboratory2.R')
read.table("C:/Users/asus/Desktop/fayllar/data science/lab2/A01_M02_20170109.xlsx",sep=" ",  header = TRUE)
mydata=read.table("C:/Users/asus/Desktop/fayllar/data science/lab2/A01_M02_20170109.xlsx",sep=" ")
mydata
source('C:/Users/asus/Desktop/fayllar/data science/lab2/laboratory2.R')
source('C:/Users/asus/Desktop/fayllar/data science/lab2/laboratory2.R')
mydata=read.table("C:/Users/asus/Desktop/fayllar/data science/lab2/A01_M02_20170109.xlsx")
mydata
View(mydata)
View(mydata)
vector=c(5,7,8,9)
vector
mylist=list(vector, sin, 'myname')
mylist
m<-matrix(c(7,5,69,4,23,5,89,45,78,26,5,9), nrow = 3, ncol = 4)
m
m<-matrix(c(7,5,69,4,23,5,89,45,78,26,5,9), nrow = 3, ncol = 4, byrow = true)
m
m<-matrix(c(7,5,69,4,23,5,89,45,78,26,5,9), nrow = 3, ncol = 4, byrow = true)
m
m<-matrix(c(7,5,69,4,23,5,89,45,78,26,5,9), nrow = 3, ncol = 4, byrow = TRUE)
m
ar<- array(c("green","blue"),dim = c(3,3,2))
ar
ar<- array(c("green","blue"),dim = c(3,3,1))
ar
ar<- array(c("green","blue"),dim = c(2,2,1))
ar
data<-data.frame(name=c("Toghrul","Ali", "Peter"),
surname=c("Abilli","Aliyev","Blachfield"),
age =c(25,26,53))
data
print("vector"+vector)
print("vector",vector)
cat("vector",vector)
cat("vector",vector)
ls
print(ls())
myfunc(5)
myfunc<-function(n){
for(i in 1:n){
print(i^2)
}
}
myfunc()
myfunc(5)
a<-'hello'
b<-'how'
c<-'are you'
paste(a,b,c)
paste(a,b,c, sep="-",collapse = NULL)
paste(a,b,c)
paste(a,b,c, sep="-")
paste(a,b,c)
paste(a,b,c, collapse = "")
v<-4:8
v
s<-seq(1,10,0.5)
s
vec<-c('fg',5,TRUE)
vec
vec<-c(5,5,2)
vec
vec<-c(5,5,2)
vec[2]
vec<-c(5,5,2)
vec[-2]
vec[1,0,0]
vec[c(1,0,0)]
vec[c(1,0,1)]
v1<-c(7,5,6,9,8,1,2)
v2<-c(8,5,3,69,7,5,9)
v1*v2
v1%v2
v1%%v2
v1%%v2
data<-read.csv("/test.csv")
data<-read.csv("test.csv")
data<-read.csv("C:/Users/asus/Desktop/Data Science/R scripts/test.csv")
data<-read.csv("C:/Users/asus/Desktop/Data Science/R scripts/test.csv")
data
data<-read.csv("C:/Users/asus/Desktop/Data Science/R scripts/test.csv")
data
View(data)
View(data)
View(data)
table(data)
view(data)
View(data)
View(data)
View(data)
View(query)
list1<- list("goods",c(7,8,5,2,3),matrix(c(8,6,2,9,7,9),nrow=2))
list1
list1[1]
list1<- list("goods",c(7,8,5,2,3),matrix(c(8,6,2,9,7,9),nrow=2))
names(list1)<-c('character','vector','matrix')
list1
list1
list1$character
list1[3]
list3<-c(list1,list2)
list3
list2<-list('gray',c(4,8,6,3),matrix(c(8,2,3,6), nrow=2))
list3<-c(list1,list2)
list3
list1[3]<-NULL
list1
list3
v3<-unlist(list1)
v3<-unlist(list1)
v3
m1<-matrix(c(1:12),nrow=3,ncol = 4, byrow = TRUE)
m1
m1<-matrix(c(1:12),nrow=3,ncol = 4, byrow = TRUE,dimnames = list(rows,cols))
m1
rows<-c('row1','row2','row2')
cols<-c('col1','col2','col3','col4')
m1<-matrix(c(1:12),nrow=3,ncol = 4, byrow = TRUE,dimnames = list(rows,cols))
m1
data<-read.table("Hills.txt")
data
install.packages(“RODBC”)
library("RODBC", lib.loc="~/R/win-library/3.4")
con <-odbcDriverConnect("Driver={ODBC Driver 13 for SQL Server};server=.;database=NovbeCentral;trusted_connection=Yes")
myquery<- sqlQuery(con, "SELECT
branc.branch_name,
func.name,
COUNT(func.name)
FROM [NovbeCentral].[dbo].[bases_arc] as base  inner join [NovbeCentral].[dbo].Branches as branc on base.branch_id=branc.id
inner join [NovbeCentral].[dbo].funcs as func on base.func_id=func.id group by branch_name, func.name  order by branch_name, func.name asc")
myquery
colnames(myquery)<-c("Brances","Functions","Count")
ggplot(myquery, aes(myquery$Brances,myquery$Count, fill=myquery$Functions))+geom_bar(stat = "identity",fill="darkblue")+
scale_x_discrete("brances")+scale_y_continuous("counts")
con <-odbcDriverConnect("Driver={ODBC Driver 13 for SQL Server};server=.;database=NovbeCentral;trusted_connection=Yes")
myquery<- sqlQuery(con, "SELECT
branc.branch_name,
func.name,
COUNT(func.name)
FROM [NovbeCentral].[dbo].[bases_arc] as base  inner join [NovbeCentral].[dbo].Branches as branc on base.branch_id=branc.id
inner join [NovbeCentral].[dbo].funcs as func on base.func_id=func.id group by branch_name, func.name  order by branch_name, func.name asc")
myquery
con <-odbcDriverConnect("Driver={ODBC Driver 13 for SQL Server};server=.; login=sa;database=NovbeCentral;trusted_connection=Yes")
con <-odbcDriverConnect("Driver={ODBC Driver 13 for SQL Server};server=.;login=sa;database=NovbeCentral;trusted_connection=Yes")
myquery<- sqlQuery(con, "SELECT
branc.branch_name,
func.name,
COUNT(func.name)
FROM [NovbeCentral].[dbo].[bases_arc] as base  inner join [NovbeCentral].[dbo].Branches as branc on base.branch_id=branc.id
inner join [NovbeCentral].[dbo].funcs as func on base.func_id=func.id group by branch_name, func.name  order by branch_name, func.name asc")
myquery
con <-odbcDriverConnect("Driver={ODBC Driver 13 for SQL Server};server=.;database=NovbeCentral;trusted_connection=Yes")
cn <- odbcDriverConnect(connection="Driver={SQL Server Native Client
11.0};server=localhost;database=NovbeCentral;trusted_connection=yes;")
cn <- odbcDriverConnect(connection="Driver={SQL Server Native Client
11.0};server=.;database=NovbeCentral;trusted_connection=yes;")
con <-odbcDriverConnect("Driver={ODBC Driver 13 for SQL Server};server=.\sa;database=NovbeCentral;trusted_connection=Yes")
con <-odbcDriverConnect("Driver={ODBC Driver 13 for SQL Server};server=.;database=NovbeCentral;trusted_connection=Yes")
con <-odbcDriverConnect("Driver={ODBC Driver 13 for SQL Server};server=.;database=NovbeCentral;uid=sa;trusted_connection=Yes")
con <-odbcDriverConnect("Driver={SQL Server};server=.;database=NovbeCentral;uid=sa;trusted_connection=Yes")
con <-odbcDriverConnect("Driver={SQL Server};server=localhost;database=NovbeCentral;uid=sa;trusted_connection=Yes")
con <-odbcDriverConnect("Driver={SQL Server};server=localhost;database=NovbeCentral;uid=sa;trusted_connection=Yes")
library("RODBC", lib.loc="~/R/win-library/3.4")
con <-odbcDriverConnect("Driver={SQL Server};server=localhost;database=NovbeCentral;uid=sa;trusted_connection=Yes")
con <-odbcDriverConnect("Driver={SQL Server};server=localhost;database=NovbeCentral;uid=MicrosoftAccount\ebilli93@mail.ru;trusted_connection=Yes")
con <-odbcDriverConnect("Driver={SQL Server};server=localhost;database=NovbeCentral;uid=ebilli93@mail.ru;trusted_connection=Yes")
cn <- odbcDriverConnect(connection="Driver={SQL Server Native Client
11.0};server=.;database=NovbeCentral;trusted_connection=yes;")
cn <- odbcDriverConnect("Driver={SQL Server Native Client
11.0};server=.;database=NovbeCentral;trusted_connection=yes;")
cn <- odbcDriverConnect("Driver={SQL Server Native Client
11.0};server=.;database=NovbeCentral;uid=sa;trusted_connection=yes;")
cn <- odbcDriverConnect("Driver={SQL Server Native Client 11.0};server=.;database=NovbeCentral;uid=sa;trusted_connection=yes;")
cn <- odbcDriverConnect("Driver={SQL Server Native Client 11.0};server=.;database=NovbeCentral;uid=sa;trusted_connection=yes;")
cn <- odbcDriverConnect("Driver={SQL Server Native Client 11.0};server=.;database=NovbeCentral;uid=sa;trusted_connection=yes;")
cn <- odbcDriverConnect("Driver={SQL Server Native Client 11.0};server=.;database=NovbeCentral;uid=ebilli93@mail.ru;trusted_connection=yes;")
version
detach("package:RODBC", unload=TRUE)
library("RODBC", lib.loc="~/R/win-library/3.4")
lsp <- function(package, all.names = FALSE, pattern)
{
package <- deparse(substitute(package))
ls(
pos = paste("package", package, sep = ":"),
all.names = all.names,
pattern = pattern
)
}
lsp(RODBC)
cn <- odbcDriverConnect(connection="Driver={SQL Server Native Client 11.0};server=localhost;database=AdventureWorksDW2012;trusted_connection=yes;")
version()
version
FALSE && 6 >= 6 || 7 >= 8 || 50 <= 49.5
!(8 > 4) ||  5 == 5.0 && 7.8 >= 7.79
FALSE || TRUE && 6 != 4 || 9 > 4
6 >= -9 && !(6 > 7) && !(!TRUE)
read.csv("activity.csv")
setwd('C:/Users/asus/Desktop/R/Reproducible')
activ<-read.csv("activity.csv")
head(activ)
sum(is.na(activ))
sum(!is.na(activ))
ac<-activ[is.na(activ$steps)==FALSE,]
head(ac)
install.packages("imputeR")
?imputeR
library(imputeR)
?impute
impute(activ, cFun = mean())
library(ggplot2)
install.packages("ggplot2")
?plot
install.packages("ggplot2", dependencies=TRUE)
weekdays(activ$date)
weekdays(as.Date(activ$date)
)
weekdays(as.Date(activity$date)
)
weekdays(as.Date(activity$date))
weekdays(as.Date(active$date))
weekdays(as.Date(activ$date))
